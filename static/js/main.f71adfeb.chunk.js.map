{"version":3,"sources":["components/wrapper/wrapper.js","components/Navbar/Navbar.js","components/Header/Header.js","components/MatchCard/MatchCard.js","App.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","Navbar","answer","count","topScore","Header","MatchCard","value","id","onClick","handleClick","alt","src","image","App","state","friends","clickedList","handleIncrement","newCount","_this","setState","reset","handleShuffle","indexOf","concat","shuffledCards","i","length","j","Math","floor","random","_ref","mixCards","_this2","this","components_Navbar_Navbar","components_Header_Header","wrapper_wrapper","map","components_MatchCard_MatchCard","key","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f71adfeb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './wrapper.css';\r\n\r\nconst Wrapper = props => (\r\n  <div className='wrapper col-12 justify-content-center'>{props.children}</div>\r\n);\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = props => (\r\n  <nav className='navbar sticky-top navbar-expand-lg navbar-dark bg-dark '>\r\n    <span className='col-xl navbar-text text-light h1'>Clicky Game!</span>\r\n    <span className='col-xl navbar-text text-light h2'>{props.answer}</span>\r\n    <span className='col-xl-2 navbar-text text-light h1'>\r\n      Score: {props.count}\r\n    </span>\r\n    <span className='col-xl-2 navbar-text text-light h1'>\r\n      {' '}\r\n      Top Score: {props.topScore}{' '}\r\n    </span>\r\n  </nav>\r\n);\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = props => (\r\n  <div className='hero text-center col-xl'>\r\n    <h2>Clicky Game!</h2>\r\n    <h4>\r\n      click an image to increase your score. If you click the same image twice\r\n      its GAME OVER\r\n    </h4>\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './MatchCard.css';\r\n\r\nconst MatchCard = props => (\r\n  <div\r\n    className='card col-xl-3 col-md-4 col-sm-1 p-5 m-5'\r\n    value={props.id}\r\n    onClick={() => props.handleClick(props.id)}\r\n  >\r\n    <div className='img-container'>\r\n      <img alt={props.id} src={props.image} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default MatchCard;\r\n","import React from 'react';\nimport Wrapper from './components/wrapper';\nimport Navbar from './components/Navbar';\nimport Header from './components/Header';\nimport MatchCard from './components/MatchCard';\nimport friends from './images/images.json';\n\nfunction mixCards(friends) {\n  for (let i = friends.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [friends[i], friends[j]] = [friends[j], friends[i]];\n  }\n  return friends;\n}\n\nclass App extends React.Component {\n  state = {\n    friends,\n    count: 0,\n    topScore: 0,\n    clickedList: [],\n    answer: ''\n  };\n\n  handleIncrement = () => {\n    const newCount = this.state.count + 1;\n    this.setState({\n      count: newCount,\n      answer: 'Correct!'\n    });\n    if (newCount >= this.state.topScore) {\n      this.setState({ topScore: newCount });\n      if (newCount === 12) {\n        this.setState({ answer: 'Hey Arnold! You Win!' });\n        this.reset();\n      }\n    } else if (newCount === 12) {\n      this.setState({ answer: 'Hey Arnold! You Win!' });\n    }\n    this.handleShuffle();\n  };\n\n  handleClick = id => {\n    if (this.state.clickedList.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({ clickedList: this.state.clickedList.concat(id) });\n    } else {\n      this.setState({\n        answer: 'Hey Arnold! Try Again!'\n      });\n      this.handleShuffle();\n      this.reset();\n    }\n  };\n\n  handleShuffle = () => {\n    let shuffledCards = mixCards(friends);\n    this.setState({\n      friends: shuffledCards\n    });\n  };\n\n  reset = () => {\n    if (this.state.count >= this.state.topScore) {\n      this.setState({\n        topScore: this.state.count,\n        count: 0,\n        clickedList: []\n      });\n    } else {\n      this.setState({\n        count: 0,\n        clickedList: []\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar\n          answer={this.state.answer}\n          count={this.state.count}\n          topScore={this.state.topScore}\n        />\n        <Header />\n        <div>\n          <Wrapper>\n            {friends.map(friends => (\n              <MatchCard\n                key={friends.id}\n                id={friends.id}\n                image={friends.image}\n                handleClick={this.handleClick}\n                handleShuffle={this.handleShuffle}\n                handleIncrement={this.handleIncrement}\n                mixCards={this.mixCards}\n              />\n            ))}\n          </Wrapper>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}